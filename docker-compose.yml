version: "1.0"

services:

  zookeeper:
      image: zookeeper:3.6.1
      container_name: zookeeper
      hostname: zookeeper
      ports:
          - "2181:2181"
      networks:
          - crypto


  kafka:
        image: wurstmeister/kafka:latest
        container_name: kafka
        hostname: kafka
        ports:
            - "9092:9092"
        environment:
            - KAFKA_ADVERTISED_HOST_NAME=kafka
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 
            - KAFKA_ADVERTISED_PORT=9092
            #"topic-name:partitions:in-sync-replicas:cleanup-policy"
            - KAFKA_CREATE_TOPICS="crypto:1:1:compact"
            - KAFKA_CREATE_TOPICS="Hello_topic:1:1:compact"
        networks:
            - crypto

  kafka-producer:
    image: openjdk:8
    container_name: kafka-producer
    networks: 
        - crypto

  cassandra:
      image: cassandra:3.11.8
      container_name: cassandra
      hostname: cassandra
      ports:
          - "9042:9042"
      volumes:
          - ./cassandraData:/var/lib/cassandra

      networks:
          - crypto
  spark-master:
    image: bde2020/spark-master:latest
    container_name: spark-master
    hostname: spark-master
    ports:
        - "8080:8080"
        - "7077:7077"
        - "6066:6066"
    networks:
        - crypto
          
  spark-consumer-worker:
      image: bde2020/spark-worker:latest
      container_name: spark-consumer-worker
      environment:
          - SPARK_MASTER=spark://spark-master:7077
      ports:
          - "8081:8081"
      volumes:
          - ./sparkConsumer:/sparkConsumer
      networks:
          - crypto

  grafana:
      image: grafana/grafana
      container_name: grafana
      restart: unless-stopped
      hostname: grafana
      ports:
          - "3000:3000"
      volumes:
          - grafana-storage:/var/lib/grafana
      #environment:
          #- GF_INSTALL_PLUGINS= hadesarchitect-cassandra-datasource
      networks:
          - crypto
      

  airflow:
      image: apache/airflow:2.2.3
      container_name: airflow
      restart: always
      environment:
          - AIRFLOW__CORE__LOAD_EXAMPLES=False
      ports:
          - "8082:8080"
      volumes:
          - ./airflow/dags:/opt/airflow/dags
      networks:
          - crypto      

      #- ./crypto_stream/stream-kafka-producer/target/stream-kafka-producer-1.0-SNAPSHOT-jar-with-dependencies.jar:/usr/src/producer.jar
      #- ./crypto_stream/stream-spark-consumer/target/stream-spark-consumer-1-jar-with-dependencies.jar:/usr/src/consumer.jar
networks:
  crypto:
    driver: bridge

volumes:
  grafana-storage: {}
